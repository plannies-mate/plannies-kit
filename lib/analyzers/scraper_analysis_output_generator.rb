#!/usr/bin/env ruby

require 'fileutils'
require 'json'
require_relative 'repos/os/process_base'

class ScraperAnalysisOutputGenerator
  def initialize(results)
    @results = results
  end

  def generate_output_files
    js_content = generate_js_content
    File.write(ProcessBase::SCRAPER_ANALYSIS_FILE, js_content)

    print_analysis_results
  end

  def print_analysis_results
    puts "\n# Analysis Results"
    puts "Generated #{ProcessBase::SCRAPER_ANALYSIS_FILE} with active scraper data"
    puts "Generated #{ProcessBase::ANALYSIS_RESULTS_FILE} with full analysis"
    puts "Including #{@results[:active_repos].size} active scrapers"
    puts "Excluded #{@results[:stats][:trivial]} trivial scrapers"
    puts "Excluded #{@results[:stats][:placeholder]} placeholder scrapers"
    puts "Excluded #{@results[:stats][:no_scraper]} repos without scraper files"
    puts "Totalling #{@results[:ignored_repos].size} ignored scrapers"
    puts "Generated at: #{@results[:generated_at]}"
  end

  private

  def generate_js_content
    active_repos = {}
    @results[:active_repos].map do |name, data|
      active_repos[name] = {
        description: data[:description],
        words_from_strings: data[:words_from_strings] || [], 
        words_from_urls: data[:words_from_urls] || [],
        url_patterns: data[:urls] || []
      }
    end
    ignore_words = @results[:known_words].to_a.sort
    <<~JS
      // Generated by Plannies Mate at #{@results[:generated_at]}
      // for #{@results[:active_repos].size} active scrapers

      export const scraperDateTime = #{@results[:generated_at].to_json};

      export const scraperData = #{JSON.pretty_generate active_repos};

      export const ignoreWords = #{JSON.pretty_generate ignore_words};
    JS
  end
end
